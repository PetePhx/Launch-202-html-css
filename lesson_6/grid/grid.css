/* Make all your modifications to the CSS file; don't make any changes to the
HTML. Do not use any float, position, or flex properties, and don't convert any
elements to inline-block. Use Grid features instead.

Flex and Grid naturally work in concert. This contrived project intentionally
restricts the use of Flex to force you to use Grid. */

* {
  padding: 0;
  margin: 0;
}

html {
  background-color: white;
  color: black;
  font: normal 24px Helvetica, Arial, sans-serif;
}

body {
  display: grid;
  grid-template-columns: 1fr 2fr 1fr;
  grid-auto-rows: min-content;
  grid-template-areas:
  "header header header"
  "nav nav nav"
  "aside1 article1 aside2"
  "aside3 article2 article2"
  "footer footer footer";
}

header, h1 {
  background-color: blue;
  color: white;
}

header {
  padding: 1rem;
  text-align: center;
  grid-area: header;
}

nav {
  background-color: cyan;
  grid-area: nav;
}

ul {
  list-style-type: none;
  display: grid;
  grid-template-columns: repeat(5, 1fr);
}

li {
  text-align: center;
  width: auto;
}

a {
  box-sizing: border-box;
  display: inline-block;
  padding: 1rem 0;
  text-decoration: none;
  width: 100%;
}

a:focus,
a:hover {
  background-color: blue;
  color: yellow;
}

article,
aside {
  padding: 0 1rem;
}

aside {
  background-color: lightgreen;
}

#aside-1 {
  grid-area: aside1;
}

#aside-2 {
  grid-area: aside2;
}

#aside-3 {
  background-color: pink;
  grid-area: aside3;
}

#article-1 {
  grid-area: article1;
}

#article-2 {
  background-color: skyblue;
  grid-area: article2;
}

p {
  margin: 1rem 0;
}

footer {
  background-color: yellow;
  grid-area: footer;
  display: grid;
  grid-template-columns: 1fr 3fr;
  grid-template-areas: "logo copyright";
}

#copyright {
  margin: 0 1rem;
  grid-area: copyright;
  justify-self: end;
  align-self: center;
}

#logo {
  background-color: orange;
  grid-area: logo;
}

img {
  display: block;
  width: 100%;
  object-fit: cover;
}
